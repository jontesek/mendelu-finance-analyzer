def process_random_documents(self, doc_type, from_date, days_delay, price_type,
                                 const_boundaries, docs_per_day):
        # Create file name.
        file_name = doc_type + '_random_%s_%s_%s' % (price_type, str(days_delay), str(const_boundaries))
        # For every day, choose random documents (from all companies).
        processed_date = from_date
        plus_day = datetime.timedelta(days=1)
        while processed_date <= datetime.datetime.now():
            print('===%s===') % str(processed_date)
            # Get documents from DB.
            if doc_type == 'fb_post':
                documents = self.db_model.get_random_fb_posts(processed_date, docs_per_day)
            elif doc_type == 'fb_comment':
                documents = self.db_model.get_random_fb_comments(processed_date, docs_per_day)
            elif doc_type == 'article':
                documents = self.db_model.get_random_articles(processed_date, docs_per_day)
            elif doc_type == 'tweet':
                documents = self.db_model.get_random_tweets(processed_date, docs_per_day)
            # Process documents.
            self._process_given_documents(documents, doc_type, days_delay, price_type, const_boundaries)
            d_list, min_class_count = self._process_given_documents(documents, doc_type, days_delay, price_type, const_boundaries)
            self._write_docs_to_file(d_list, min_class_count, doc_type, 'all', days_delay, price_type, const_boundaries, file_name)
            # Increment date.
            processed_date += plus_day
        # the end
        print('>>>Random documents for all dates exported.')